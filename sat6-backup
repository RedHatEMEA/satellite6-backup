#!/bin/bash 
##############################################################################
# Script to perform backup of Satellite 6.
#
# Author: Harald Jens√•s <hjensas@redhat.com>
#
##############################################################################

#
# CONSTANTS
#
BDIR=/backup       # The Backup Dir
#The name of the logical volume /var/lib/pulp resides on
PULP_LV=
#The name of the volume group /var/lib/pulp resides on
PULP_VG=
FULL_PATH_LV=/dev/$PULP_VG/$PULP_LV

#
# Set a return code to 0, any errors will set this to 1.
# Exit the script with the return code, to indicate success ot not.
#
RET_CODE=0


#
# Find some binaries...
#
TAR_CMD=$(which tar)
RSYNC_CMD=$(which rsync)
RUNUSER_CMD=$(which runuser)
POSTGRES_USER=postgres
MONGODUMP_CMD=$(which mongodump)
LOGGER_CMD=$(which logger)
LOG_CMD="${LOGGER_CMD} -t SAT6BACKUP"


prepare_backup_dir() {
    chgrp postgres $BDIR
    chmod 770 $BDIR
}

#############################################
# Backup the Satellite 6 Configuration files.
#
sat6_config_backup() {
   $LOG_CMD "Backing up Satellite 6 - Configuration...."
   if ! $TAR_CMD --selinux -czvf \
       ${BDIR}/config_files.tar.gz \
       /etc/candlepin \
       /etc/foreman \
       /etc/foreman-installer \
       /etc/foreman-proxy \
       /etc/gutterball \
       /etc/hammer \
       /etc/httpd \
       /etc/pki/content \
       /etc/pki/katello \
       /etc/katello-certs-tools \
       /etc/pki/pulp \
       /etc/pki/tls/certs/katello-node.crt \
       /etc/pki/tls/certs/pulp_consumers_ca.crt \
       /etc/pki/tls/certs/pulp_ssl_cert.crt \
       /etc/pki/tls/private/katello-node.key \
       /etc/pulp \
       /etc/puppet \
       /etc/qpid \
       /etc/qpid-dispatch \
       /etc/sysconfig/tomcat* \
       /etc/tomcat* \
       /root/ssl-build \
       /var/lib/foreman \
       /var/lib/candlepin \
       /var/lib/puppet/foreman_cache_data \
       /var/lib/puppet/ssl \
       /var/www/html/pub
      then
         RET_CODE=1
         $LOG_CMD "ERROR: Failed to backup Satellite 6 - Configuration"
      else
         $LOG_CMD "Successfully  backed up Satellite 6 - Configuration"
    fi

    return $RET_CODE
}

##############################
# Backup the Pulp Repositories
#	
sat6_repo_backup() {
    $LOG_CMD "Backing up Satellite 6 - Pulp Repositories..."

    # We need to stop pulp before doing the backup, for consistency.
    if ! katello-service stop
      then
        RET_CODE=1
        $LOG_CMD "ERROR: stopping katello-service failed"
        $LOG_CMD "ERROR: Failed to backup Satellite 6 - Pulp Repositories"
        return $RET_CODE
      else
        $LOG_CMD "Successfully stopped ketello-service before Pulp Repo Snapshot"
    fi

    # If a snapshot of the logical volume containint pulp repos
    # already exist, remove it.
    local snap_pulp_lv=/dev/$PULP_VG/snap_$(basename ${PULP_LV})
    echo $snap_pulp_lv
    if [ -b $snap_pulp_lv ]
      then
        if umount $snap_pulp_lv
          then
            $LOG_CMD "Successfully umount LVM snapshot $snap_pulp_lv"
          else
            $LOG_CMD "Assuming LVM snapshot $snap_pulp_lv is not mounted"
        fi

        if ! lvremove -f $snap_pulp_lv
          then
            RET_CODE=1
            $LOG_CMD "ERROR: Failed to remove LVM Snapshot $snap_pulp_lv"
            $LOG_CMD "ERROR: Failed to backup Satellite 6 - Pulp Repositories"
            return $RET_CODE
          else
            $LOG_CMD "Successfully removed LVM snapshot $snap_pulp_lv"
        fi
    fi

    # Create snapshot of logical volume containing pulp repos.
    if ! lvcreate --size 500m  \
                  --snapshot \
                  --name snap_$(basename ${PULP_LV}) \
                  ${FULL_PATH_LV}
      then
        RET_CODE=1
        $LOG_CMD "ERROR: Failed to create snapshot of LVM volume ${PULP_LV}"
        $LOG_CMD "ERROR: Failed to backup Satellite 6 - Pulp Repositories"
        return $RET_CODE
      else
        $LOG_CMD "Successfully created snapshot of LVM volume ${PULP_LV}"
    fi

    # Mount the Snapshot   
    mkdir -p ${BDIR}/var/lib/pulp
    mount -o nouuid $snap_pulp_lv ${BDIR}/var

    ### NOTE : Backup ${BDIR}/var/lib/pulp/ only with external tool...
    #          Ideally /var/lib/pulp/ wold be it's own LVM volume...   

    # Start the katello-servic again after backup complete
    if ! katello-service start
      then
        RET_CODE=1
        $LOG_CMD "ERROR: Starting katello-service failed"
        return $RET_CODE
      else
        $LOG_CMD "Successfully started ketello-service after Pulp Repo Snapshot"
    fi

    return $RET_CODE
}

#############################
# Backup the MongoDB Database
#
sat6_mongo_backup() {
    $LOG_CMD "Backing up Satellite 6 - MongoDB database..."
    $MONGODUMP_CMD --host localhost --out ${BDIR}/mongo_dump
}

################################
# Backup the PostgreSQL Database
#
sat6_postgresql_backup() {
    $LOG_CMD "Backing up Satellite 6 - PostgreSQL - foreman"
    $RUNUSER_CMD - $POSTGRES_USER -c \
       "pg_dump foreman > ${BDIR}/foreman.dump"
    $LOG_CMD "Backing up Satellite 6 - PostgreSQL - candlepin"
    $RUNUSER_CMD - $POSTGRES_USER -c \
       "pg_dump candlepin > ${BDIR}/candlepin.dump"
}

prepare_backup_dir
sat6_config_backup
sat6_postgresql_backup
sat6_mongo_backup
sat6_repo_backup

exit $RET_CODE

